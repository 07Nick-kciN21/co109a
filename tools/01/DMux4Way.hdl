// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/DMux4Way.hdl

/**
 * 4-way demultiplexor:
 * {a, b, c, d} = {in, 0, 0, 0} if sel == 00
 *                {0, in, 0, 0} if sel == 01
 *                {0, 0, in, 0} if sel == 10
 *                {0, 0, 0, in} if sel == 11
 */

CHIP DMux4Way {
    IN in, sel[2];//sel[1]  sel[0]
    OUT a, b, c, d;
// if in=0 all 0

// if sel[1] = 0 : DMUX(c,d)
// if sel[1] = 1 : DMUX(a,b)

    PARTS:
    // Not(in=sel[0], out=ns0);
    // Not(in=sel[1], out=ns1);

    // And(a=ns0, b=ns1, out=s00);
    // And(a=sel[0], b=ns1, out=s01);
    // And(a=ns0, b=sel[1], out=s10);
    // And(a=sel[0], b=sel[1], out=s11);
  
    // DMux(in=s00, sel=in, a=d0, b=a);
    // DMux(in=s01, sel=in, a=d1, b=b);
    // DMux(in=s10, sel=in, a=d2, b=c);
    // DMux(in=s11, sel=in, a=d3, b=d);
    DMux(in=in, sel=sel[1], a=d1, b=d2);
    DMux(in=d1, sel=sel[0], a=a, b=b);
    DMux(in=d2, sel=sel[0], a=c, b=d);
    // Put your code here:
}